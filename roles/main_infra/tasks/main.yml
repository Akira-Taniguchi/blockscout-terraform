- name: Local or remote backend selector (remote)
  template: 
    src: remote-backend-selector.tf.j2 
    dest: roles/main_infra/files/remote-backend-selector.tf
  when: 
    - backend|bool == true

- name: Local or remote backend selector (local)
  file:
    state: absent
    dest: roles/main_infra/files/remote-backend-selector.tf
  when: 
    - backend | default ('false') | bool != true

- name: Generating variables file
  template:
    src: terraform.tfvars.j2
    dest: roles/main_infra/files/terraform.tfvars

- name: Generating backend file
  template:
    src: backend.tfvars.j2
    dest: roles/main_infra/files/backend.tfvars
  when: backend|bool == true
    
#Workaround since terraform module return unexpected error.
- name: Terraform provisioning
  shell: "echo yes | {{ terraform_location }} {{ item }}"
  args:
    chdir: "roles/main_infra/files"
  with_items:
    - "init{{ ' -backend-config=backend.tfvars' if backend|bool == true else '' }}"
    - plan
    - apply

- name: Terraform output info into variable
  shell: "{{ terraform_location }} output"
  register: output
  args:
    chdir: "roles/main_infra/files"

- name: Output info from Terraform
  debug:
    var: output.stdout_lines
